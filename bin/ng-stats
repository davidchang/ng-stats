#!/usr/bin/env node

var program = require('commander'),
  fs = require('fs'),
  _ = require('underscore'),
  ngStats = require('../main');

program
  .version(require('../package.json').version)
  .usage('<infile> <outfile>')
  .parse(process.argv);

if (program.args.length !== 0 && program.args.length !== 2) {
  console.error('ngStats should be called with an input and output file, or no arguments if using stdio');
  process.exit(1);
}

if (program.args.length === 2) {
  var infile = program.args[0];
  var outfile = program.args[1];

  try {
    var content = fs.readFileSync(infile, 'utf-8');
  } catch (e) {
    console.error('Error opening: ' + infile);
    process.exit(1);
  }
  var stats = ngStats.generateStats(content, program);

  try {
    fs.writeFileSync(outfile, generatedCode);
  } catch (e) {
    console.error('Error writing to: ' + outfile);
    process.exit(1);
  }

} else {
  // else use stdio
  var buffer = '';

  process.stdin.setEncoding('utf8');
  process.stdin.resume();

  process.stdin.on('data', function (chunk) {
    buffer += chunk;
  });

  process.stdin.on('end', function() {
    var stats = ngStats.generateStats(buffer, program);
    _.each(stats, function(val, key) {
      var values = val.join(', ');
      if (!values.length) {
        values = 'None';
      }

      process.stdout.write(key + ': ' + values + '\n');
    });
  });
}
